//
// Generated file, do not edit! Created by nedtool 5.6 from bcast.msg.
//

#ifndef __BCAST_M_H
#define __BCAST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>bcast.msg:1</tt> by nedtool.
 * <pre>
 * message bcast
 * {
 *     string sourcename;
 *     int round;
 *     string value;
 *     string sig;
 * }
 * </pre>
 */
class bcast : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::opp_string sourcename;
    int round;
    ::omnetpp::opp_string value;
    ::omnetpp::opp_string sig;

  private:
    void copy(const bcast& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const bcast&);

  public:
    bcast(const char *name=nullptr, short kind=0);
    bcast(const bcast& other);
    virtual ~bcast();
    bcast& operator=(const bcast& other);
    virtual bcast *dup() const override {return new bcast(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getSourcename() const;
    virtual void setSourcename(const char * sourcename);
    virtual int getRound() const;
    virtual void setRound(int round);
    virtual const char * getValue() const;
    virtual void setValue(const char * value);
    virtual const char * getSig() const;
    virtual void setSig(const char * sig);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const bcast& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, bcast& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BCAST_M_H

